/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pkg2darraysassignment;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;

/**
 *
 * @author 348848128
 */
public class drawingPanel extends javax.swing.JPanel {

    /**
     * Creates new form drawingPanel
     */
    CGame game = new CGame();
    int boxHeight = 10;
    int boxWidth = 10;
    int rows = 0;
    int cols = 0;

    boolean initialize = true;

    public drawingPanel() {
        initComponents();

    }

    boolean update = true;

    int cellRed = 255;
    int cellGreen = 255;
    int cellBlue = 255;

    int backRed = 0;
    int backGreen = 0;
    int backBlue = 0;
    int scene = 1;

    @Override
    public void paintComponent(Graphics g) {
        super.paintComponent(g);

        //different scenes of display
        switch (scene) {
            case 1:
                //setup display, game of life does not run
                break;
            case 2:
                //game of life
                this.setBounds(0, 0, cols * boxWidth, rows * boxHeight);
                if (initialize) {
                    //initializes grid ONCE
                    game.initializeGrid(rows, cols);
                    initialize = false;
                }

                if (update) {
                    game.grid = game.updateGrid(rows, cols);

                }

                //colors grid according to dead and alive cells
                for (int y = 0; y < game.grid.length; y++) {
                    for (int x = 0; x < game.grid[0].length; x++) {
                        if (game.grid[y][x] == true) {
                            g.setColor(new Color(cellRed, cellGreen, cellBlue));
                            g.fillRect(x * boxWidth, y * boxHeight, (x * boxWidth) + boxWidth, (y * boxHeight) + boxHeight);

                        } else if (game.grid[y][x] == false) {
                            g.setColor(new Color(backRed, backGreen, backBlue));
                            g.fillRect(x * boxWidth, y * boxHeight, (x * boxWidth) + boxWidth, (y * boxHeight) + boxHeight);
                        }
                    }
                }

                break;
        }

    }

    Timer t1;

    /**
     * timer
     */
    public void timer() {
        t1 = new Timer(100, new TimerListener());
    }

    private class TimerListener implements ActionListener {

        @Override
        public void actionPerformed(ActionEvent e) {
            drawingPanel.super.repaint();

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
